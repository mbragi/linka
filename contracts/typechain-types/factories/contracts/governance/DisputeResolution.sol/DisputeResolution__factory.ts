/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  DisputeResolution,
  DisputeResolutionInterface,
} from "../../../../contracts/governance/DisputeResolution.sol/DisputeResolution";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
    ],
    name: "ArbitratorDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "ArbitratorRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ArbitratorStakeSlashed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
    ],
    name: "DisputeAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "buyerWins",
        type: "bool",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "ARBITRATION_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARBITRATOR_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ARBITRATOR_STAKE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DISPUTE_TIMEOUT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "arbitratorCases",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "arbitrators",
    outputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalCases",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successfulCases",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastActive",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "string",
        name: "evidence",
        type: "string",
      },
    ],
    name: "assignDispute",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputes",
    outputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
      {
        internalType: "string",
        name: "evidence",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "enum DisputeResolution.DisputeStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "buyerWins",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "arbitratorFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
    ],
    name: "getArbitratorCases",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
    ],
    name: "getArbitratorStats",
    outputs: [
      {
        internalType: "uint256",
        name: "totalCases",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successfulCases",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "successRate",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "getDispute",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "escrowId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "initiator",
            type: "address",
          },
          {
            internalType: "address",
            name: "arbitrator",
            type: "address",
          },
          {
            internalType: "string",
            name: "reason",
            type: "string",
          },
          {
            internalType: "string",
            name: "evidence",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "enum DisputeResolution.DisputeStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "buyerWins",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "arbitratorFee",
            type: "uint256",
          },
        ],
        internalType: "struct DisputeResolution.DisputeCase",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
    ],
    name: "isArbitratorActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registerArbitrator",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "buyerWins",
        type: "bool",
      },
      {
        internalType: "string",
        name: "reasoning",
        type: "string",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowManager",
        type: "address",
      },
    ],
    name: "setEscrowManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "slashArbitrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalArbitrators",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDisputes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610053565b506001805561004e33610053565b6100a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611c06806100b26000396000f3fe6080604052600436106101445760003560e01c8063715018a6116100b6578063c12255c41161006f578063c12255c414610446578063c5e4ccc414610466578063ccc3b19c1461047c578063e3a96cbd14610492578063f2fde38b146104bf578063f3a5ed78146104df57600080fd5b8063715018a61461036e57806378aee33b146103835780637b076d4b1461039f578063866293fd146103bb5780638da5cb5b14610408578063b7c8b78a1461042657600080fd5b80632840662d116101085780632840662d146101ea5780634755aa7a1461020a578063486265c61461024257806351d0ea3714610259578063564a565d146102f657806366d872c21461032c57600080fd5b806306d586f91461015057806309c71c03146101865780630f035556146101ab5780631dd3019c146101b557806320d0ed3a146101d557600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b3660046115ee565b6104ff565b60405161017d9190611610565b60405180910390f35b34801561019257600080fd5b5061019d6203f48081565b60405190815260200161017d565b6101b361056b565b005b3480156101c157600080fd5b5061019d6101d0366004611654565b6106f1565b3480156101e157600080fd5b506101b3610722565b3480156101f657600080fd5b506101b3610205366004611721565b610860565b34801561021657600080fd5b5061022a61022536600461177f565b610b5f565b6040516001600160a01b03909116815260200161017d565b34801561024e57600080fd5b5061019d62093a8081565b34801561026557600080fd5b506102b96102743660046115ee565b60026020819052600091825260409091208054600182015492820154600383015460048401546005909401546001600160a01b03909316949360ff9092169290919086565b604080516001600160a01b0390971687526020870195909552921515938501939093526060840152608083019190915260a082015260c00161017d565b34801561030257600080fd5b506103166103113660046117fd565b610e70565b60405161017d9a99989796959493929190611894565b34801561033857600080fd5b5061034c6103473660046115ee565b610fe3565b604080519485526020850193909352918301521515606082015260800161017d565b34801561037a57600080fd5b506101b361108f565b34801561038f57600080fd5b5061019d67016345785d8a000081565b3480156103ab57600080fd5b5061019d670de0b6b3a764000081565b3480156103c757600080fd5b506103f86103d63660046115ee565b6001600160a01b03166000908152600260208190526040909120015460ff1690565b604051901515815260200161017d565b34801561041457600080fd5b506000546001600160a01b031661022a565b34801561043257600080fd5b506101b36104413660046115ee565b6110a3565b34801561045257600080fd5b5060055461022a906001600160a01b031681565b34801561047257600080fd5b5061019d60065481565b34801561048857600080fd5b5061019d60075481565b34801561049e57600080fd5b506104b26104ad3660046117fd565b6110cd565b60405161017d9190611911565b3480156104cb57600080fd5b506101b36104da3660046115ee565b6112b0565b3480156104eb57600080fd5b506101b36104fa366004611654565b6112ee565b6001600160a01b03811660009081526004602090815260409182902080548351818402810184019094528084526060939283018282801561055f57602002820191906000526020600020905b81548152602001906001019080831161054b575b50505050509050919050565b670de0b6b3a76400003410156105bd5760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74207374616b6560701b60448201526064015b60405180910390fd5b336000908152600260208190526040909120015460ff16156106165760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b60448201526064016105b4565b6040805160c081018252338082523460208084019182526001848601818152600060608701818152608088018281524260a08a01908152978352600295869052988220975188546001600160a01b0319166001600160a01b0390911617885594519287019290925551918501805460ff19169215159290921790915590516003840155925160048301555160059091015560078054916106b5836119ee565b909155505060405134815233907f8964d147132eb34950084efda449f1e07fcaa2b53f7c3ffa82b5ddb1f08404469060200160405180910390a2565b6004602052816000526040600020818154811061070d57600080fd5b90600052602060002001600091509150505481565b336000908152600260208190526040909120015460ff166107805760405162461bcd60e51b81526020600482015260186024820152772737ba1030b71030b1ba34bb329030b93134ba3930ba37b960411b60448201526064016105b4565b336000818152600260208190526040808320918201805460ff19169055600182015490519193918381818185875af1925050503d80600081146107df576040519150601f19603f3d011682016040523d82523d6000602084013e6107e4565b606091505b505090508061082b5760405162461bcd60e51b815260206004820152601360248201527214dd185ad9481c995d1d5c9b8819985a5b1959606a1b60448201526064016105b4565b60006001830181905560405133917fe8588b575f4358110c91c741959b99d099362ee80da9fffd50c967d872bf7e1591a25050565b336000908152600260208190526040909120015460ff166108be5760405162461bcd60e51b81526020600482015260186024820152772737ba1030b71030b1ba34bb329030b93134ba3930ba37b960411b60448201526064016105b4565b6108c6611421565b600083815260036020526040902060028101546001600160a01b031633146109305760405162461bcd60e51b815260206004820152601760248201527f4e6f742061737369676e65642061726269747261746f7200000000000000000060448201526064016105b4565b6001600782015460ff16600481111561094b5761094b61185c565b1461098b5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420756e6465722072657669657760801b60448201526064016105b4565b80600601544211156109d55760405162461bcd60e51b8152602060048201526013602482015272105c989a5d1c985d1a5bdb881d1a5b595bdd5d606a1b60448201526064016105b4565b600781018054600261ffff199091166101008615150217811790915533600090815260209190915260408120600401805491610a10836119ee565b9091555050600881015460405160009133918381818185875af1925050503d8060008114610a5a576040519150601f19603f3d011682016040523d82523d6000602084013e610a5f565b606091505b5050905080610ab05760405162461bcd60e51b815260206004820152601d60248201527f41726269747261746f7220666565207061796d656e74206661696c656400000060448201526064016105b4565b600554604051631a592f7160e11b81526004810187905285151560248201526001600160a01b03909116906334b25ee290604401600060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505060405186151581523392508791507f8fdd4548a8481406b6e29c0d6f25e27cd72502f79f4adf409468502e7920dabc9060200160405180910390a35050610b5a60018055565b505050565b6005546000906001600160a01b03163314610bb25760405162461bcd60e51b815260206004820152601360248201527227b7363c9032b9b1b937bb9036b0b730b3b2b960691b60448201526064016105b4565b60008581526003602052604090206005015415610c0a5760405162461bcd60e51b81526020600482015260166024820152754469737075746520616c72656164792065786973747360501b60448201526064016105b4565b6000610c1461144b565b90506001600160a01b038116610c6c5760405162461bcd60e51b815260206004820152601860248201527f4e6f20617661696c61626c652061726269747261746f7273000000000000000060448201526064016105b4565b604051806101400160405280878152602001866001600160a01b03168152602001826001600160a01b031681526020018581526020018481526020014281526020016203f48042610cbd9190611a07565b8152602001600181526000602080830182905267016345785d8a000060409384015289825260038082529183902084518155908401516001820180546001600160a01b03199081166001600160a01b039384161790915593850151600283018054909516911617909255606083015190820190610d3a9082611aa8565b5060808201516004820190610d4f9082611aa8565b5060a0820151600582015560c0820151600682015560e082015160078201805460ff19166001836004811115610d8757610d8761185c565b02179055506101008281015160078301805461ff001916911515909202179055610120909101516008909101556001600160a01b03811660008181526004602090815260408083208054600181018255908452828420018a905592825260029052908120600301805491610dfa836119ee565b90915550506001600160a01b0381166000908152600260205260408120426005909101556006805491610e2c836119ee565b90915550506040516001600160a01b0382169087907f162b443ed37ca6ea8574f9a4d2dde0fdfb4282b29888dff526fbdd02834e66f090600090a395945050505050565b6003602081905260009182526040909120805460018201546002830154938301805492946001600160a01b0392831694921692610eac90611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610ed890611a20565b8015610f255780601f10610efa57610100808354040283529160200191610f25565b820191906000526020600020905b815481529060010190602001808311610f0857829003601f168201915b505050505090806004018054610f3a90611a20565b80601f0160208091040260200160405190810160405280929190818152602001828054610f6690611a20565b8015610fb35780601f10610f8857610100808354040283529160200191610fb3565b820191906000526020600020905b815481529060010190602001808311610f9657829003601f168201915b505050506005830154600684015460078501546008909501549394919390925060ff80831692610100900416908a565b6001600160a01b038082166000908152600260208181526040808420815160c081018352815490961686526001810154928601929092529181015460ff1615159184019190915260038101546060840181905260048201546080850181905260059092015460a08501529290919081908461105f57600061107e565b60608101516080820151611074906064611b68565b61107e9190611b95565b925080604001519150509193509193565b6110976114df565b6110a1600061150c565b565b6110ab6114df565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6110d561155c565b6000828152600360208181526040928390208351610140810185528154815260018201546001600160a01b0390811693820193909352600282015490921693820193909352908201805491929160608401919061113190611a20565b80601f016020809104026020016040519081016040528092919081815260200182805461115d90611a20565b80156111aa5780601f1061117f576101008083540402835291602001916111aa565b820191906000526020600020905b81548152906001019060200180831161118d57829003601f168201915b505050505081526020016004820180546111c390611a20565b80601f01602080910402602001604051908101604052809291908181526020018280546111ef90611a20565b801561123c5780601f106112115761010080835404028352916020019161123c565b820191906000526020600020905b81548152906001019060200180831161121f57829003601f168201915b50505091835250506005820154602082015260068201546040820152600782015460609091019060ff1660048111156112775761127761185c565b60048111156112885761128861185c565b81526007820154610100900460ff161515602082015260089091015460409091015292915050565b6112b86114df565b6001600160a01b0381166112e257604051631e4fbdf760e01b8152600060048201526024016105b4565b6112eb8161150c565b50565b6112f66114df565b6001600160a01b03821660009081526002602081905260409091209081015460ff1661135c5760405162461bcd60e51b815260206004820152601560248201527441726269747261746f72206e6f742061637469766560581b60448201526064016105b4565b80600101548211156113a75760405162461bcd60e51b8152602060048201526014602482015273416d6f756e742065786365656473207374616b6560601b60448201526064016105b4565b818160010160008282546113bb9190611ba9565b909155505060018101546000036113d95760028101805460ff191690555b826001600160a01b03167f521900b5c20930852cba17cbf53dd50de727ae71d35bfab8203920e284799f648360405161141491815260200190565b60405180910390a2505050565b60026001540361144457604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6007546000904390829061145f9083611bbc565b90506000805b6007548110156114d457600061147b8285611a07565b6001600160a01b0381166000908152600260208190526040909120015490915060ff16156114c157826114ad816119ee565b935050838311156114c15795945050505050565b50806114cc816119ee565b915050611465565b506000935050505090565b6000546001600160a01b031633146110a15760405163118cdaa760e01b81523360048201526024016105b4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518061014001604052806000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001606081526020016000815260200160008152602001600060048111156115be576115be61185c565b815260006020820181905260409091015290565b80356001600160a01b03811681146115e957600080fd5b919050565b60006020828403121561160057600080fd5b611609826115d2565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156116485783518352928401929184019160010161162c565b50909695505050505050565b6000806040838503121561166757600080fd5b611670836115d2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126116a557600080fd5b813567ffffffffffffffff808211156116c0576116c061167e565b604051601f8301601f19908116603f011681019082821181831017156116e8576116e861167e565b8160405283815286602085880101111561170157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561173657600080fd5b833592506020840135801515811461174d57600080fd5b9150604084013567ffffffffffffffff81111561176957600080fd5b61177586828701611694565b9150509250925092565b6000806000806080858703121561179557600080fd5b843593506117a5602086016115d2565b9250604085013567ffffffffffffffff808211156117c257600080fd5b6117ce88838901611694565b935060608701359150808211156117e457600080fd5b506117f187828801611694565b91505092959194509250565b60006020828403121561180f57600080fd5b5035919050565b6000815180845260005b8181101561183c57602081850181015186830182015201611820565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b6005811061189057634e487b7160e01b600052602160045260246000fd5b9052565b8a81526001600160a01b038a8116602083015289166040820152610140606082018190526000906118c78382018b611816565b905082810360808401526118db818a611816565b9150508660a08301528560c08301526118f760e0830186611872565b921515610100820152610120015298975050505050505050565b60208152815160208201526000602083015161193860408401826001600160a01b03169052565b5060408301516001600160a01b038116606084015250606083015161014080608085015261196a610160850183611816565b91506080850151601f198584030160a08601526119878382611816565b92505060a085015160c085015260c085015160e085015260e08501516101006119b281870183611872565b86015190506101206119c78682018315159052565b959095015193019290925250919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611a0057611a006119d8565b5060010190565b80820180821115611a1a57611a1a6119d8565b92915050565b600181811c90821680611a3457607f821691505b602082108103611a5457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610b5a57600081815260208120601f850160051c81016020861015611a815750805b601f850160051c820191505b81811015611aa057828155600101611a8d565b505050505050565b815167ffffffffffffffff811115611ac257611ac261167e565b611ad681611ad08454611a20565b84611a5a565b602080601f831160018114611b0b5760008415611af35750858301515b600019600386901b1c1916600185901b178555611aa0565b600085815260208120601f198616915b82811015611b3a57888601518255948401946001909101908401611b1b565b5085821015611b585787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082028115828204841417611a1a57611a1a6119d8565b634e487b7160e01b600052601260045260246000fd5b600082611ba457611ba4611b7f565b500490565b81810381811115611a1a57611a1a6119d8565b600082611bcb57611bcb611b7f565b50069056fea2646970667358221220dacd256eeb044946981841c5849d4f62dc7e959f363f0552f4e8ae0183647d0164736f6c63430008140033";

type DisputeResolutionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DisputeResolutionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DisputeResolution__factory extends ContractFactory {
  constructor(...args: DisputeResolutionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DisputeResolution & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): DisputeResolution__factory {
    return super.connect(runner) as DisputeResolution__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DisputeResolutionInterface {
    return new Interface(_abi) as DisputeResolutionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DisputeResolution {
    return new Contract(address, _abi, runner) as unknown as DisputeResolution;
  }
}
